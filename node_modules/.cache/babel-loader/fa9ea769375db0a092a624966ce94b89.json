{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hezro\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\apps\\\\meusite\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { v4 as unidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport TaskDetails from \"./components/TaskDetails\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Estudar Promgramação\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"Ler Livros da Faculdade\",\n    completed: true\n  }]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        data\n      } = await axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\");\n      setTasks(data);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id == taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: unidv4(),\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const handleTaskDeletion = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTask, {\n            handleTaskAddition: handleTaskAddition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            handleTaskClick: handleTaskClick,\n            handleTaskDeletion: handleTaskDeletion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:taskTitle\",\n        exact: true,\n        component: TaskDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RhuEp07BfvbPwcf1oC/4YPHjQpM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hezro/OneDrive/Área de Trabalho/apps/meusite/src/App.jsx"],"names":["React","useState","useEffect","axios","v4","unidv4","BrowserRouter","Router","Route","Tasks","AddTask","Header","TaskDetails","App","tasks","setTasks","id","title","completed","fetchTasks","data","get","handleTaskClick","taskId","newTasks","map","task","handleTaskAddition","taskTitle","handleTaskDeletion","filter"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CACjC;AACEe,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,sBAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANiC,CAAD,CAAlC;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7B,YAAM;AAACC,QAAAA;AAAD,UAAS,MAAMjB,KAAK,CAACkB,GAAN,CACnB,sDADmB,CAArB;AAIAN,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,KAND;;AAQAD,IAAAA,UAAU;AACX,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,eAAe,GAAIC,MAAD,IAAY;AAClC,UAAMC,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACV,EAAL,IAAWO,MAAf,EAAuB,OAAO,EAAE,GAAGG,IAAL;AAAWR,QAAAA,SAAS,EAAE,CAACQ,IAAI,CAACR;AAA5B,OAAP;AAEvB,aAAOQ,IAAP;AACD,KAJgB,CAAjB;AAMAX,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GARD;;AAUA,QAAMG,kBAAkB,GAAIC,SAAD,IAAe;AACxC,UAAMJ,QAAQ,GAAG,CACf,GAAGV,KADY,EAEf;AACEG,MAAAA,KAAK,EAAEW,SADT;AAEEZ,MAAAA,EAAE,EAAEX,MAAM,EAFZ;AAGEa,MAAAA,SAAS,EAAE;AAHb,KAFe,CAAjB;AASAH,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GAXD;;AAaA,QAAMK,kBAAkB,GAAIN,MAAD,IAAY;AACrC,UAAMC,QAAQ,GAAGV,KAAK,CAACgB,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYO,MAAnC,CAAjB;AACAR,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAE,mBACN;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,kBAAkB,EAAEG;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,KAAK,EAAEb,KADT;AAEE,YAAA,eAAe,EAAEQ,eAFnB;AAGE,YAAA,kBAAkB,EAAEO;AAHtB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAiBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,SAAS,EAAEjB;AAA3C;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA7EQC,G;;KAAAA,G;AA+ET,eAAeA,GAAf","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { v4 as unidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/Header\";\nimport TaskDetails from \"./components/TaskDetails\";\n\nimport \"./app.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      title: \"Estudar Promgramação\",\n      completed: false,\n    },\n    {\n      id: 2,\n      title: \"Ler Livros da Faculdade\",\n      completed: true,\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {data} = await axios.get(\n        \"https://jsonplaceholder.typicode.com/todos?_limit=10\"\n      );\n\n      setTasks(data);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const handleTaskClick = (taskId) => {\n    const newTasks = tasks.map((task) => {\n      if (task.id == taskId) return { ...task, completed: !task.completed };\n\n      return task;\n    });\n\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = (taskTitle) => {\n    const newTasks = [\n      ...tasks,\n      {\n        title: taskTitle,\n        id: unidv4(),\n        completed: false,\n      },\n    ];\n\n    setTasks(newTasks);\n  };\n\n  const handleTaskDeletion = (taskId) => {\n    const newTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(newTasks);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <>\n              <AddTask handleTaskAddition={handleTaskAddition} />\n              <Tasks\n                tasks={tasks}\n                handleTaskClick={handleTaskClick}\n                handleTaskDeletion={handleTaskDeletion}\n              />\n            </>\n          )}\n        />\n\n        <Route path=\"/:taskTitle\" exact component={TaskDetails} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}